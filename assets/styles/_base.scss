/**
* 0.0 Root
*
* Top level styles every element should inherit.
*/

@include font-face('Encode Sans Semi Condensed', 'encode-sans-semi-condensed-v10-latin-800', '800', 'normal');
@include font-face('Encode Sans Semi Condensed', 'encode-sans-semi-condensed-v10-latin-700', '700', 'normal');
@include font-face('Roboto', 'roboto-v30-latin-regular', '400', 'normal');
@include font-face('Roboto', 'roboto-v30-latin-italic', '400', 'italic');
@include font-face('Roboto', 'roboto-v30-latin-700', '700', 'normal');
@include font-face('Roboto', 'roboto-v30-latin-700italic', '700', 'italic');

html {
  background-color: var(--color-background);
  box-sizing: border-box;
  color: var(--color-text);
  font-family: 'Roboto', Helvetica, Arial, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  height: 100%;
  line-height: 1.7;
  -ms-overflow-style: -ms-autohiding-scrollbar;
  overflow-wrap: break-word;
  word-wrap: break-word;

  *,
  *::before,
  *::after {
    box-sizing: inherit;
  }
}

body {
  height: 100%;
  overflow-x: hidden;

  @media (min-width: $breakpoint-mobile-horizontal) {
    font-size: 1.125rem;
  }
}

/**
* 1.0 Typography
*
* Styling all likely used content flow elements.
*/

#{$heading-selectors} {
  color: var(--color-headline);
  font-family: 'Encode Sans Semi Condensed', Helvetica, Arial, sans-serif;
  font-weight: 700;
  line-height: 1.33;
  margin-bottom: 1rem;
  margin-top: 3rem;

  a,
  a:hover,
  a:focus {
    color: var(--color-headline);
    text-decoration: none;
  }

  > em {
    color: var(--color-accent);
    font-style: normal;
  }
}

h1,
.h1 {
  font-size: 2.25rem;
  font-weight: 800;
  margin-bottom: 1.5rem;

  @media (min-width: $breakpoint-mobile-horizontal) {
    font-size: 3.5rem;
  }
}

h2,
.h2 {
  font-size: 1.875rem;
  font-weight: 800;
  margin-bottom: 1.5rem;

  @media (min-width: $breakpoint-mobile-horizontal) {
    font-size: 2.625rem;
  }
}

h3,
.h3 {
  font-size: 1.5rem;

  @media (min-width: $breakpoint-mobile-horizontal) {
    font-size: 1.6875rem;
  }
}

h4,
.h4 {
  font-size: 1.25rem;
  margin-top: 2rem;

  @media (min-width: $breakpoint-mobile-horizontal) {
    font-size: 1.375rem;
  }
}

h5,
.h5 {
  font-family: inherit;
  font-size: 1.25rem;
  font-weight: inherit;
  margin-top: 1.5rem;

  @media (min-width: $breakpoint-mobile-horizontal) {
    font-size: 1.375rem;
  }
}

h6,
.h6 {
  font-family: inherit;
  font-size: 1.125rem;
  margin-top: 1.5rem;
}

@include headings-following-headings(1, 6) {
  margin-top: 0;
}

a {
  background-image: linear-gradient(to bottom, var(--color-border-alpha) 0%, var(--color-border-alpha) 100%);
  background-position: 0 0.75em;
  background-repeat: no-repeat;
  background-size: 100%;
  color: var(--color-accent);
  text-decoration: none;
  transition: color 0.2s $ease-in-out-circ, background-position 0.2s $ease-in-out-circ;

  &:hover,
  &:focus {
    background-position: 0 0;
    color: var(--color-accent-hover);
  }

  &:focus {
    outline-color: var(--color-accent-alpha);
  }
}

p,
.paragraph,
table,
figure,
pre {
  margin: 0 0 1.5rem;
}

hr {
  background-color: var(--color-border-alpha);
  border: 0;
  display: block;
  height: var(--border-width);
  margin: 3rem 0;
}

img {
  display: block;
  max-width: 100%;
  width: 100%;
}

figcaption {
  font-size: 0.9375rem;
  line-height: 1.5;
  margin: 1rem auto 0;
  max-width: var(--content-max-width);
}

code,
kbd,
pre,
samp {
  font-size: 0.95rem;
}

pre,
code {
  background-color: var(--color-border-alpha);
  border-radius: 4px;
  display: inline-block;
  padding: 0 0.375rem;
  word-break: break-word;
}

pre {
  border-radius: 8px;
  padding: 1.25rem 1.5rem;

  code {
    background: transparent;
    padding: 0;
  }
}

blockquote,
.blockquote {
  color: var(--color-accent);
  font-size: 1.5rem;
  font-weight: 700;
  line-height: 1.33;
  margin: 3rem 0;
  padding-left: 2.5rem;
  position: relative;

  @media (min-width: $breakpoint-mobile-horizontal) {
    font-size: 1.75rem;
    padding-left: 3.75rem;
  }

  &::before {
    content: '\201c'; // Unicode escaped LEFT DOUBLE QUOTATION MARK
    font-family: Helvetica, Arial, sans-serif;
    font-size: 2.5rem;
    font-weight: 800;
    left: 0;
    line-height: 1;
    position: absolute;
    top: 0.25rem;

    @media (min-width: $breakpoint-mobile-horizontal) {
      font-size: 6rem;
      top: -2px;
    }
  }

  p:last-child {
    margin-bottom: 0;
  }
}

/**
* 1.1 Lists & Tables
*
* Default and custom styled list and table elements.
*/

ul,
ol {
  margin: 1.5rem 0;
  padding-left: 1.5rem;

  li {
    margin-bottom: 0.25rem;
  }

  ul,
  ol {
    margin-bottom: 0;
    margin-top: 0.25rem;
    padding-left: 2rem;
  }
}

ul {
  > li {
    &::marker {
      font-size: 1.25rem;
    }
  }
}

/* Icon Lists */

.iconList {
  list-style: none;
  padding: 0;

  li {
    padding-left: 2rem;
    position: relative;

    .feather:first-child {
      display: block;
      height: 20px;
      left: 0;
      position: absolute;
      top: 4px;
      width: 20px;

      @media (min-width: $breakpoint-mobile-horizontal) {
        top: 5px;
      }
    }
  }
}

/* Tables */

table {
  border-spacing: 0;
  box-shadow: inset 0 0 0 var(--border-width) var(--color-border);
  max-width: 100%;
  width: 100%;
}

.boxRadius > thead {
  th {
    border: 1px solid  var(--color-border); // fix IE border artifacts

    &:first-child {
      border-top-left-radius: var(--box-border-radius);
    }

    &:last-child {
      border-top-right-radius: var(--box-border-radius);
    }
  }
}

td,
th {
  padding: 0.9375rem 1.5rem;
  text-align: inherit;
  vertical-align: top;
}

thead {
  th {
    background-color: var(--color-border);
    color: var(--color-background);
    padding: 1.25rem 1.5rem;
    vertical-align: middle;
    white-space: nowrap;
  }
}

tr:nth-child(even) {
  background-color: var(--color-border-alpha);
}

/**
* 1.2 Buttons
*
* Global button elements, including reset on standard button element.
*/

button {
  appearance: none;
  background-color: transparent;
  border: 0;
  color: inherit;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  padding: 0;
  text-align: inherit;

  &:focus {
    outline-color: var(--color-accent-alpha);
  }
}

.button {
  @include reset-link;
  appearance: none;
  background-color: var(--color-accent);
  border: var(--border-width) solid var(--color-accent);
  border-radius: var(--button-border-radius);
  color: var(--color-background);
  cursor: pointer;
  display: inline-block;
  font-family: inherit;
  font-weight: 700;
  line-height: 1.7;
  outline: none;
  padding: 0.75rem 2rem;
  text-align: center;
  text-decoration: none;
  transition: 0.2s ease;
  user-select: none;

  &:disabled,
  &--disabled {
    background-color: var(--color-border);
    border-color: var(--color-border);
    cursor: default;
    opacity: calc(1 - 0.618); // based on golden ratio.
    pointer-events: none;
  }

  &:hover {
    background-color: var(--color-accent-hover);
    border-color: var(--color-accent-hover);
    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.25);
    color: var(--color-background);
  }

  &:focus {
    box-shadow: 0 1px var(--border-width) rgba(0, 0, 0, 0.25), 0 0 0 3px var(--color-accent-alpha);
    color: var(--color-background);
  }

  &:active {
    box-shadow: none;
  }

  + .button {
    margin-top: 8px;
  }

  &--ghost {
    background-color: transparent;
    border-color: var(--color-accent);
    color: var(--color-accent);

    &:focus {
      background-color: transparent;
      box-shadow: 0 1px var(--border-width) rgba(0, 0, 0, 0.25), 0 0 0 3px var(--color-accent-alpha);
      color: var(--color-accent);
    }

    &:hover {
      background-color: var(--color-accent-hover);
      background-color: var(--color-accent-hover);
      color: var(--color-background);
    }

    &:active {
      background-color: var(--color-accent);
      border-color: var(--color-accent);
      box-shadow: none;
      color: var(--color-background);
    }

    &:disabled,
    &--disabled {
      background-color: transparent;
      border-color: var(--color-border);
      color: var(--color-border);
    }
  }

  &--small {
    font-size: 0.9375rem;
    line-height: 1.45;
    padding: 0.5rem 1.25rem;
  }

  &--link {
    background-color: transparent;
    border: 0 solid transparent;
    color: var(--color-accent);
    line-height: 1.7;
    padding: 0;
    position: relative;
    text-decoration: none;
    text-transform: none;
    transition: color 0.2s ease;

    &:hover,
    &:focus {
      background-color: transparent;
      box-shadow: none;
      color: var(--color-accent-hover);
    }

    &:hover {
      &::after {
        animation: arrowFly 0.35s 1;
        transform: rotate(45deg);
      }
    }

    &::after {
      border-right: var(--border-width) solid currentColor;
      border-top: var(--border-width) solid currentColor;
      content: '';
      display: inline-block;
      height: 0.5rem;
      margin-bottom: 0.0625rem;
      margin-left: 0.25rem;
      transform: rotate(45deg);
      vertical-align: baseline;
      width: 0.5rem;
    }

    &.button--small {
      &::after {
        height: 0.375rem;
        margin-bottom: 0.0625rem;
        width: 0.375rem;
      }
    }
  }
}

@keyframes arrowFly {
  0% {opacity: 1;
    transform: rotate(45deg) translate(0, 0);}

  50% {opacity: 0;
    transform: rotate(45deg) translate(5px, -5px);}

  51% {opacity: 0;
    transform: rotate(45deg) translate(-5px, 5px);}

  100% {opacity: 1;
    transform: rotate(45deg) translate(0, 0);}
}

/* Icons */

.feather {
  color: var(--color-accent);
  position: relative;
  top: -2px;
  vertical-align: middle;
}

/**
* 1.3 Forms
*
* Global form elements, including structering wrapper elements.
*/

form {
  margin: 0;
}

fieldset {
  border: 0;
  margin: 0 0 1.5rem;
  padding: 0;

  *:last-child {
    margin-bottom: 0;
  }

  input,
  select,
  textarea {
    margin: 0 0 2rem;
  }
}

legend {
  display: inline-block;
  font-size: 1.125rem;
  margin-bottom: 1rem;
}

label {
  display: inline-block;
  font-size: 1rem;
  font-weight: 700;
  line-height: 1.4;
  margin-bottom: 0.5rem;
}

#{$input-selectors} {
  appearance: none;
  background-color: transparent;
  border: var(--border-width) solid var(--color-border);
  border-radius: 0.66rem;
  color: var(--color-headline);
  font-family: inherit;
  font-size: 1rem;
  line-height: 1.25;
  min-height: 3.5rem;
  outline: none;
  transition: border-color 0.2s ease, box-shadow 0.2s ease;

  &::placeholder {
    color: var(--color-border);
  }

  &:focus {
    border-color: var(--color-accent);
    box-shadow: 0 0 0 3px var(--color-accent-alpha);
  }

  &:disabled {
    background-color: var(--color-border-alpha);
    border-color: var(--color-border);
    color: var(--color-border);
    opacity: 0.75;
  }
}

.input-validation-error {
  border-color: var(--color-error);
}

input,
select,
textarea {
  margin: 0 0 1rem;
  padding: 0.5rem 1.25rem;
}

textarea {
  line-height: 1.7;
  min-height: 150px;
  padding: 1rem 1.25rem;
  resize: vertical;
  vertical-align: top;
  width: 100%;
}

select {
  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg width='32' height='32' xmlns='http://www.w3.org/2000/svg'%3E%3Cpolyline fill='none' stroke='%23414751' stroke-width='5'  points='2,9 16,25 30,9 '/%3E%3C/svg%3E");
  background-position: calc(100% - 18px) center;
  background-repeat: no-repeat;
  background-size: 9px;
  line-height: 1.7;
  padding-right: 45px;

  &::-ms-expand {
    display: none;
  }
}

.select {
  display: inline-block;
  position: relative;
  vertical-align: top;

  &::after {
    border-bottom: var(--border-width) solid var(--color-headline);
    border-left: var(--border-width) solid var(--color-headline);
    content: '';
    height: 8px;
    position: absolute;
    right: 20px;
    top: calc(50% - 6px);
    transform: rotate(-45deg);
    width: 8px;
    z-index: 1;
  }

  select {
    // don't change backgound image, if you need to change it - use wrapper .select
    background-image: none;
    margin: 0;
    position: relative;
    z-index: 2;

    option {
      color: #000;
    }
  }
}

[type='checkbox'],
[type='radio'] {
  opacity: 0;
  pointer-events: none;
  position: absolute;
  width: 1px;

  &,
  &:hover {
    border-color: var(--color-border);
    outline: 0;
  }

  + label {
    cursor: pointer;
    display: inline-block;
    letter-spacing: 0;
    line-height: 1.7;
    padding-left: 2rem;
    position: relative;

    &::before {
      background: transparent;
      border: var(--border-width) solid var(--color-border);
      border-radius: 0.25rem;
      content: '';
      display: block;
      height: 1.25rem;
      left: 0;
      margin: 0;
      padding: 0;
      position: absolute;
      top: 0.2rem;
      transition: border-color 0.2s ease, box-shadow 0.2s ease;
      width: 1.25rem;
    }

    &::after {
      border-bottom: var(--border-width) solid var(--color-accent);
      border-right: var(--border-width) solid var(--color-accent);
      content: '';
      display: block;
      height: 0.75rem;
      left: 0.4375rem;
      opacity: 0;
      position: absolute;
      top: 0.3125rem;
      transform: rotate(45deg);
      transition: opacity 0.2s ease, border-color 0.2s ease, background-color 0.2s ease;
      visibility: hidden;
      width: 0.375rem;
    }
  }

  &:focus {
    + label {
      &::before {
        border-color: var(--color-accent);
        box-shadow: 0 0 0 3px var(--color-accent-alpha);
      }
    }
  }

  &:checked {
    + label {
      &::before {
        background-color: var(--color-accent);
        border-color: var(--color-accent);
      }

      &::after {
        border-color: var(--color-background);
        opacity: 1;
        visibility: visible;
      }
    }
  }
}

[type='radio'] {
  + label {
    &::before {
      border-radius: 50%;
    }

    &::after {
      background-color: var(--color-accent);
      border: 0;
      border-radius: 50%;
      height: 0.75rem;
      left: 0.25rem;
      top: 0.4375rem;
      transform: none;
      width: 0.75rem;
    }
  }

  &:checked {
    + label {
      &::before {
        background-color: var(--color-background);
      }
    }
  }
}

.oneInputForm {
  border: var(--border-width) solid var(--color-border);
  border-radius: calc(var(--button-border-radius) + 4px);
  margin: 0 0 2rem;
  min-height: 4.375rem;
  padding: 4px;
  position: relative;
  transition: border-color 0.2s ease, box-shadow 0.2s ease;
  width: 100%;

  @media (min-width: $breakpoint-mobile-horizontal) {
    align-items: center;
    display: flex;

    &:focus-within {
      border-color: var(--color-accent);
      box-shadow: 0 0 0 3px var(--color-accent-alpha);
    }
  }

  &.themeReset {
    @media (max-width: $breakpoint-mobile-horizontal - 1) {
      background: none;

      .oneInputForm-input {
        background-color: var(--color-background);
      }
    }
  }

  &-input {
    border: 0;
    border-radius: var(--button-border-radius);
    margin: 0;
    padding-left: 1.5rem;
    padding-right: 1.5rem;
    width: 100%;

    &:focus {
      box-shadow: none;
    }
  }

  &-button {
    width: 100%;

    @media (min-width: $breakpoint-mobile-horizontal) {
      box-shadow: none;
      flex-shrink: 0;
      width: auto;
    }

    &:focus {
      box-shadow: none;
    }
  }

  .themeDark &,
  .themeHero & {
    &:focus-within {
      box-shadow: none;
    }

    .oneInputForm-input {
      &:focus {
        box-shadow: none;
      }
    }
  }
}

/**
* 2.0 Helpers
*
* Global layout classes for a consistent appearance.
*/

.pageWrapper {
  display: flex;
  flex-direction: column;
  height: 100%;

  .admin-bar & {
    padding-top: var(--wp-admin--admin-bar--height);
  }
}

.mainContent {
  flex: 1 0 auto;
}

.flyntComponent {
  position: relative;
}

.componentSpacing {
  margin: var(--component-spacing) 0;

  &[class*='theme'] {
    margin: 0;
    padding: var(--component-spacing) 0;
  }
}

// Reduce top spacing in half for first component in mainContent
.mainContent {
  > .componentSpacing:first-child {
    @media (min-width: $breakpoint-desktop) {
      margin-top: calc(var(--component-spacing) / 2);
    }

    &[class*='theme'] {
      margin: 0;

      @media (min-width: $breakpoint-desktop) {
        padding-top: calc(var(--component-spacing) / 2);
      }
    }
  }
}

.centerMaxWidthContainer {
  @include center;
}

.centerContentMaxWidth {
  margin: 0 auto;
  max-width: var(--content-max-width);
}

.centerContentMaxWidthLarge {
  margin: 0 auto;
  max-width: var(--content-max-width-large);
}

.preContent {
  @include reset-content-margins;
  margin: 0 auto calc(var(--component-spacing) / 2);
  max-width: var(--content-max-width);
  text-align: center;
}

.postContent {
  @include reset-content-margins;
  margin: calc(var(--component-spacing) / 2) auto 0;
  max-width: var(--content-max-width);
  text-align: center;
}

.scrollableTableWrapper {
  -webkit-overflow-scrolling: touch;
  overflow-x: auto;
}

/* Class for text that should only be visible to screen readers */
.visuallyHidden {
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px !important;
  overflow: hidden;
  position: absolute !important;
  white-space: nowrap;
  width: 1px !important;
}

/* Box Helpers */

.boxPadding {
  @include reset-content-margins;
  padding: var(--box-padding);
}

.boxRadius {
  border-radius: var(--box-border-radius);
  overflow: hidden;
  z-index: 1;
}

.boxShadow {
  box-shadow: 0 5px 35px calc(-1 * var(--border-width)) rgba(0, 0, 0, 0.08);
}

/* Custom styling for single post layouts */
.post {
  &-main {
    .componentSpacing {
      margin: 32px 0;

      &[class*='theme'] {
        margin: 0;
        padding: 32px 0;

        @media (min-width: $breakpoint-tablet) {
          padding: var(--component-spacing-mobile) 0;
        }
      }

      @media (min-width: $breakpoint-tablet) {
        margin: var(--component-spacing-mobile) 0;
      }
    }

    > .componentSpacing {
      &:first-child {
        margin-top: 0;
      }

      &:last-child {
        margin-bottom: 0;
      }
    }
  }
}

/* Skip link behaviour */

.skipLink {
  position: fixed;
  top: -100px;
  z-index: 999;

  &:focus {
    top: 0;
  }
}

/**
* 3.0 Themes
*
* Color themes for backgrounds and content elements.
*/

[class*='theme'] {
  background-color: var(--color-background);
  color: var(--color-text);
}
